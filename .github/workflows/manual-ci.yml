name: Automated MVP and Pilot Deployment

on:
  push: # Automatically trigger the workflow on push to the repository
  workflow_dispatch:

jobs:
  initial_echo:
    runs-on: ubuntu-latest
    steps:
      - name: Echo Current Date and Time
        run: |
          echo "Current Date and Time: $(date)"

  wait_for_mvp:
    runs-on: ubuntu-latest
    needs: initial_echo
    environment: mvp
    steps:
      - name: Check MVP Date and Time
        run: |
          if [ -z "${{ env.MVP_TIME }}" ]; then
            echo "MVP_TIME not set. Running MVP step immediately."
            echo "MVP_TIME_SET=false" >> $GITHUB_ENV
          else
            echo "MVP time set to: ${{ env.MVP_TIME }}"
            echo "MVP_TIME_SET=true" >> $GITHUB_ENV
          fi

      - name: Wait for MVP Date and Time
        if: env.MVP_TIME_SET == 'true'
        run: |
          mvp_timestamp=$(date -d "${{ env.MVP_TIME }}" +%s)
          current_timestamp=$(date +%s)
          if [ $mvp_timestamp -gt $current_timestamp ]; then
            wait_time=$((mvp_timestamp - current_timestamp))
            echo "Waiting for MVP time: ${{ env.MVP_TIME }} (in $wait_time seconds)"
            sleep $wait_time
          fi

      - name: Echo MVP Message
        run: |
          echo "MVP Deployment Triggered at: $(date)"

  wait_for_pilot:
    runs-on: ubuntu-latest
    needs: wait_for_mvp
    environment: pilot
    steps:
      - name: Check Pilot Date and Time
        run: |
          if [ -z "${{ env.PILOT_TIME }}" ]; then
            echo "PILOT_TIME not set. Running Pilot step immediately."
            echo "PILOT_TIME_SET=false" >> $GITHUB_ENV
          else
            echo "Pilot time set to: ${{ env.PILOT_TIME }}"
            echo "PILOT_TIME_SET=true" >> $GITHUB_ENV
          fi

      - name: Wait for Pilot Date and Time
        if: env.PILOT_TIME_SET == 'true'
        run: |
          pilot_timestamp=$(date -d "${{ env.PILOT_TIME }}" +%s)
          current_timestamp=$(date +%s)
          if [ $pilot_timestamp -gt $current_timestamp ]; then
            wait_time=$((pilot_timestamp - current_timestamp))
            echo "Waiting for Pilot time: ${{ env.PILOT_TIME }} (in $wait_time seconds)"
            sleep $wait_time
          fi

      - name: Echo Pilot Message
        run: |
          echo "Pilot Deployment Triggered at: $(date)"
